version: '2.1'
services:
  unifiedapi:
    image: webstore/unifiedapi:DEV
    container_name: unifiedapi.dev
    ports:
      - "80:80"
      - "9999:9999"
    environment:
      SERVICE_PORT: 80
  database:
    image: webstore/db:DEV
    container_name: database.dev
    command: mysqld --user=root --verbose
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: "webstore"
      MYSQL_USER: "vUser"
      MYSQL_PASSWORD: "U9e[FtrA^QC3Fv"
      MYSQL_ROOT_PASSWORD: "test123"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    healthcheck:
      test: "exit 0"

  registration-service:
    image: webstore/registration-service:DEV
    container_name: registration.service.dev
    ports:
      - "9001:80"
    links:
      - database:db
    depends_on:
      database:
        condition: service_healthy
      unifiedapi:
        condition: service_started
    environment:
      DB_HOST: "db"
      DB_PORT: "3306"
      DB: "webstore"
      DB_USER: "vUser"
      DB_PASSWORD: "U9e[FtrA^QC3Fv"
      SERVICE_PORT: 80
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://192.168.99.100/registration/health"]
      interval: 5s
      timeout: 5s
      retries: 10

  product-service:
    image: webstore/product-service:DEV
    container_name: product.service.dev
    ports:
      - "9002:80"
    links:
      - database:db
    depends_on:
      database:
        condition: service_healthy
      registration-service:
        condition: service_healthy
      unifiedapi:
        condition: service_started
    environment:
      DB_HOST: "db"
      DB_PORT: "3306"
      DB: "webstore"
      DB_USER: "vUser"
      DB_PASSWORD: "U9e[FtrA^QC3Fv"
      SERVICE_PORT: 80
      REGISTRATION_SERVICE: "http://192.168.99.100/registration"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://192.168.99.100/product/health"]
      interval: 5s
      timeout: 5s
      retries: 10
  ui:
    image: webstore/ui:DEV
    container_name: webstore.ui.dev
    ports:
      - "8080:80"
    depends_on:
      registration-service:
        condition: service_healthy
      product-service:
        condition: service_healthy
      unifiedapi:
        condition: service_started
